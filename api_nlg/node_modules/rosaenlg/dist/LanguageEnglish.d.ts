/**
 * @license
 * Copyright 2019 Ludan Stoeckl√©
 * SPDX-License-Identifier: Apache-2.0
 */
import { DetTypes, DetParams, LanguageImpl, Numbers, GrammarParsed } from './LanguageImpl';
import { GenderNumberManager } from './GenderNumberManager';
import { ConjParams } from './VerbsManager';
import { VerbsData } from 'rosaenlg-pug-code-gen';
import { ExtraParams as ExtraParamsEn } from 'english-verbs-helper';
import { LanguageCommon } from 'rosaenlg-commons';
interface ConjParamsEn extends ConjParams, ExtraParamsEn {
    tense: string;
}
declare type PossForm = 'OF' | 'S';
export declare class LanguageEnglish extends LanguageImpl {
    iso2: string;
    langForNumeral: string;
    langForDateFns: Locale;
    n2wordsLang: string;
    n2wordsLib: any;
    floatingPointWord: string;
    table0to9: string[];
    hasGender: boolean;
    hasNeutral: boolean;
    defaultAdjPos: string;
    defaultTense: string;
    defaultLastSeparatorForAdjectives: string;
    private mergedVerbsDataEn;
    constructor(languageCommon: LanguageCommon);
    getDet(det: DetTypes, params: DetParams): string;
    getAgreeAdj(adjective: string): string;
    getOrdinal(val: number): string;
    getSubstantive(subst: string, number: Numbers): string;
    parseSimplifiedString(val: string): GrammarParsed;
    thirdPossessionTriggerRef(owner: any, owned: any, params: {
        possForm: PossForm;
    }, spy: Spy): void;
    thirdPossessionRefTriggered(owner: any, owned: any, params: any, spy: Spy, genderNumberManager: GenderNumberManager): void;
    recipientPossession(owned: any, spy: Spy): void;
    getConjugation(_subject: any, verb: string, tense: string, number: Numbers, conjParams: ConjParamsEn, _genderNumberManager: GenderNumberManager, embeddedVerbs: VerbsData): string;
    isPlural(val: number): boolean;
}
export {};
