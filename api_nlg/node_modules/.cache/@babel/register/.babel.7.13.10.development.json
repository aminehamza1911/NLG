{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/cloud/api_nlg/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/cloud/api_nlg\",\"filename\":\"/home/cloud/api_nlg/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/cloud/api_nlg\",\"plugins\":[],\"presets\":[]}:7.13.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/cloud/api_nlg/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/cloud/api_nlg",
      "filename": "/home/cloud/api_nlg/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/cloud/api_nlg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/cloud/api_nlg/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/cloud/api_nlg/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/cloud/api_nlg/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst app = express();\n\nconst cors = require('cors');\n\nconst upload = require('express-fileupload');\n\napp.use(cors());\napp.use(upload());\napp.get('/', (req, res) => {\n  res.send('File Upload for NLG');\n});\napp.post('/upload', (req, res) => {\n  if (req.files) {\n    const file = req.files.file;\n    const fileName = file.name;\n    file.mv('./uploads/' + fileName, error => {\n      if (error) {\n        res.send(error);\n      } else {\n        res.send('The file has been successfully uploaded ');\n      }\n    });\n  }\n});\napp.listen(3001, () => {\n  console.log('Server listen on PORT 3001');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsImNvcnMiLCJ1cGxvYWQiLCJ1c2UiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwicG9zdCIsImZpbGVzIiwiZmlsZSIsImZpbGVOYW1lIiwibmFtZSIsIm12IiwiZXJyb3IiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0YsT0FBTyxFQUFuQjs7QUFDQSxNQUFNRyxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1HLE1BQU0sR0FBR0gsT0FBTyxDQUFDLG9CQUFELENBQXRCOztBQUVBQyxHQUFHLENBQUNHLEdBQUosQ0FBUUYsSUFBSSxFQUFaO0FBRUFELEdBQUcsQ0FBQ0csR0FBSixDQUFRRCxNQUFNLEVBQWQ7QUFFQUYsR0FBRyxDQUFDSSxHQUFKLENBQVEsR0FBUixFQUFhLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3ZCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxxQkFBVDtBQUNILENBRkQ7QUFJQVAsR0FBRyxDQUFDUSxJQUFKLENBQVMsU0FBVCxFQUFvQixDQUFDSCxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUM5QixNQUFHRCxHQUFHLENBQUNJLEtBQVAsRUFBYztBQUNWLFVBQU1DLElBQUksR0FBR0wsR0FBRyxDQUFDSSxLQUFKLENBQVVDLElBQXZCO0FBRUEsVUFBTUMsUUFBUSxHQUFHRCxJQUFJLENBQUNFLElBQXRCO0FBRUFGLElBQUFBLElBQUksQ0FBQ0csRUFBTCxDQUFRLGVBQWVGLFFBQXZCLEVBQWtDRyxLQUFELElBQVc7QUFDeEMsVUFBR0EsS0FBSCxFQUFVO0FBQ05SLFFBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTTyxLQUFUO0FBQ0gsT0FGRCxNQUVPO0FBQ0hSLFFBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLDBDQUFUO0FBQ0g7QUFDSixLQU5EO0FBUUg7QUFDSixDQWZEO0FBaUJBUCxHQUFHLENBQUNlLE1BQUosQ0FBVyxJQUFYLEVBQWlCLE1BQU07QUFDbkJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDRCQUFaO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9jbG91ZC9hcGlfbmxnLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xuY29uc3QgdXBsb2FkID0gcmVxdWlyZSgnZXhwcmVzcy1maWxldXBsb2FkJyk7XG5cbmFwcC51c2UoY29ycygpKTtcblxuYXBwLnVzZSh1cGxvYWQoKSk7XG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc2VuZCgnRmlsZSBVcGxvYWQgZm9yIE5MRycpO1xufSk7XG5cbmFwcC5wb3N0KCcvdXBsb2FkJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgaWYocmVxLmZpbGVzKSB7XG4gICAgICAgIGNvbnN0IGZpbGUgPSByZXEuZmlsZXMuZmlsZTtcbiAgICAgICBcbiAgICAgICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlLm5hbWU7XG5cbiAgICAgICAgZmlsZS5tdignLi91cGxvYWRzLycgKyBmaWxlTmFtZSwgKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBpZihlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlcy5zZW5kKGVycm9yKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzLnNlbmQoJ1RoZSBmaWxlIGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSB1cGxvYWRlZCAnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7ICAgICAgXG5cbiAgICB9XG59KTtcblxuYXBwLmxpc3RlbigzMDAxLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ1NlcnZlciBsaXN0ZW4gb24gUE9SVCAzMDAxJyk7XG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "cors",
        "upload",
        "use",
        "get",
        "req",
        "res",
        "send",
        "post",
        "files",
        "file",
        "fileName",
        "name",
        "mv",
        "error",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,MAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,oBAAD,CAAtB;;AAEAC,GAAG,CAACG,GAAJ,CAAQF,IAAI,EAAZ;AAEAD,GAAG,CAACG,GAAJ,CAAQD,MAAM,EAAd;AAEAF,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,qBAAT;AACH,CAFD;AAIAP,GAAG,CAACQ,IAAJ,CAAS,SAAT,EAAoB,CAACH,GAAD,EAAMC,GAAN,KAAc;AAC9B,MAAGD,GAAG,CAACI,KAAP,EAAc;AACV,UAAMC,IAAI,GAAGL,GAAG,CAACI,KAAJ,CAAUC,IAAvB;AAEA,UAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAtB;AAEAF,IAAAA,IAAI,CAACG,EAAL,CAAQ,eAAeF,QAAvB,EAAkCG,KAAD,IAAW;AACxC,UAAGA,KAAH,EAAU;AACNR,QAAAA,GAAG,CAACC,IAAJ,CAASO,KAAT;AACH,OAFD,MAEO;AACHR,QAAAA,GAAG,CAACC,IAAJ,CAAS,0CAAT;AACH;AACJ,KAND;AAQH;AACJ,CAfD;AAiBAP,GAAG,CAACe,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,CAFD",
      "sourceRoot": "/home/cloud/api_nlg/",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\nconst cors = require('cors');\nconst upload = require('express-fileupload');\n\napp.use(cors());\n\napp.use(upload());\n\napp.get('/', (req, res) => {\n    res.send('File Upload for NLG');\n});\n\napp.post('/upload', (req, res) => {\n    if(req.files) {\n        const file = req.files.file;\n       \n        const fileName = file.name;\n\n        file.mv('./uploads/' + fileName, (error) => {\n            if(error) {\n                res.send(error);\n            } else {\n                res.send('The file has been successfully uploaded ');\n            }\n        });      \n\n    }\n});\n\napp.listen(3001, () => {\n    console.log('Server listen on PORT 3001');\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1615584758855
  }
}