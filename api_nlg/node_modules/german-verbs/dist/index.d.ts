/**
 * @license
 * Copyright 2019 Ludan Stoecklé
 * SPDX-License-Identifier: Apache-2.0
 */
export interface VerbInfoPerson {
    1: string;
    2: string;
    3: string;
}
export interface VerbInfoTense {
    S: VerbInfoPerson;
    P: VerbInfoPerson;
}
export interface VerbInfoImp {
    S: string;
    P: string;
}
export interface VerbInfo {
    INF: string;
    PA1: string;
    PA2: string[];
    KJ1: VerbInfoTense;
    KJ2: VerbInfoTense;
    PRÄ: VerbInfoTense;
    PRT: VerbInfoTense;
    IMP: VerbInfoImp;
}
export interface VerbsInfo {
    [key: string]: VerbInfo;
}
export declare function getVerbInfo(verbsList: VerbsInfo, verb: string): VerbInfo;
export declare type Numbers = 'S' | 'P';
export declare type Persons = 1 | 2 | 3;
export declare function getReflexiveFormPronoun(pronominalCase: PronominalCase, person: Persons, number: Numbers): string;
export declare function getReflexiveCase(verb: string): PronominalCase;
export declare function getPartizip2(verbsList: VerbsInfo, verb: string): string;
export declare function alwaysUsesSein(verb: string): boolean;
export declare type PronominalCase = 'ACCUSATIVE' | 'DATIVE';
export declare type GermanAux = 'SEIN' | 'HABEN';
export declare function getConjugation(verbsList: VerbsInfo, verb: string, tense: string, person: Persons, number: Numbers, aux: GermanAux, pronominal: boolean, pronominalCase: PronominalCase): string[];
